diff --git a/node_modules/@nuxt/nitro/dist/index.mjs b/node_modules/@nuxt/nitro/dist/index.mjs
index 5ac99ac..3ba57ff 100644
--- a/node_modules/@nuxt/nitro/dist/index.mjs
+++ b/node_modules/@nuxt/nitro/dist/index.mjs
@@ -44,7 +44,6 @@ import httpProxy from 'http-proxy';
 import { listen } from 'listhen';
 import servePlaceholder from 'serve-placeholder';
 import serveStatic from 'serve-static';
-import connect from 'connect';
 
 async function printFSTree(dir) {
   if (stdenv.test) {
@@ -764,7 +763,7 @@ const getRollupConfig = (nitroContext) => {
     },
     treeshake: {
       moduleSideEffects(id) {
-        return nitroContext.moduleSideEffects.some((match) => id.startsWith(match));
+        return id.includes("node_modules") || nitroContext.moduleSideEffects.some((match) => id.startsWith(match));
       }
     }
   };
@@ -839,7 +838,8 @@ const getRollupConfig = (nitroContext) => {
       "@/": nitroContext._nuxt.srcDir,
       "~~": nitroContext._nuxt.rootDir,
       "@@/": nitroContext._nuxt.rootDir,
-      ...env.alias
+      ...env.alias,
+			...nitroContext.alias,
     }
   }));
   const moduleDirectories = [
@@ -1524,6 +1524,7 @@ function getNitroContext(nuxtOptions, input) {
       inline: !nuxtOptions.dev,
       dirs: {}
     },
+		alias: nuxtOptions.alias || {},
     _nuxt: {
       majorVersion: nuxtOptions._majorVersion || 2,
       dev: nuxtOptions.dev,
@@ -1672,10 +1673,6 @@ function createDevServer(nitroContext) {
   app.use(nitroContext._nuxt.publicPath, serveStatic(resolve(nitroContext._nuxt.buildDir, "dist/client")));
   app.use(nitroContext._nuxt.routerBase, serveStatic(resolve(nitroContext._nuxt.publicDir)));
   app.use("/_vfs", useBase("/_vfs", handleVfs(nitroContext)));
-  const legacyMiddleware = createDynamicMiddleware();
-  const devMiddleware = createDynamicMiddleware();
-  app.use(legacyMiddleware.middleware);
-  app.use(devMiddleware.middleware);
   app.use(nitroContext._nuxt.publicPath, servePlaceholder());
   const proxy = httpProxy.createProxy();
   const proxyHandle = promisifyHandle((req, res) => proxy.web(req, res, { target: workerAddress }, (_err) => {
@@ -1730,26 +1727,20 @@ function createDevServer(nitroContext) {
     app,
     close,
     watch,
-    setLegacyMiddleware: legacyMiddleware.set,
-    setDevMiddleware: devMiddleware.set
+    setLegacyMiddleware: createDynamicMiddleware(app),
+    setDevMiddleware: createDynamicMiddleware(app),
   };
 }
-function createDynamicMiddleware() {
-  let middleware;
-  return {
-    set: (input) => {
+function createDynamicMiddleware(app) {
+  return (input) => {
       if (!Array.isArray(input)) {
-        middleware = input;
+        app.use(input)
         return;
       }
-      const app = connect();
       for (const m of input) {
         app.use(m.path || m.route || "/", m.handler || m.handle);
       }
-      middleware = app;
-    },
-    middleware: (req, res, next) => middleware ? middleware(req, res, next) : next()
-  };
+    }
 }
 
 const wpfs = {
